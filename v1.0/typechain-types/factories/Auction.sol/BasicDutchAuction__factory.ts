/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BasicDutchAuction,
  BasicDutchAuctionInterface,
} from "../../Auction.sol/BasicDutchAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Refund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RefundWithdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "auctionEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionEnded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "endAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "highestBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "highestBidder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numBlocksAuctionOpen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offerPriceDecrement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seller",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c7038038062001c70833981810160405281019062000037919062000314565b62000053671305d8ff3d66aa2f60c01b620002d160201b60201c565b6200006f67e60f621e7f1d336c60c01b620002d160201b60201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000cb6713ea84972778c94760c01b620002d160201b60201c565b82600181905550620000ee67b3a64e72accaa36260c01b620002d160201b60201c565b816002819055506200011167cd020afce1b5fdf560c01b620002d160201b60201c565b8060038190555062000134675bb368c2aedd955b60c01b620002d160201b60201c565b6200015067c77d921bb28a581a60c01b620002d160201b60201c565b60006003546002546200016491906200039f565b90506200018267cfd79362a31ca24360c01b620002d160201b60201c565b6200019e6763286f252481d92d60c01b620002d160201b60201c565b620001ba67c6b96d0cd122c8f260c01b620002d160201b60201c565b60015481111562000202576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001f9906200044b565b60405180910390fd5b6200021e6730be588d2c0a8d2460c01b620002d160201b60201c565b6200023a67427fcc7297d1124860c01b620002d160201b60201c565b806001546200024a91906200046d565b6004819055506200026c67787b425370af9a4660c01b620002d160201b60201c565b600f6002546200027d91906200039f565b426200028a9190620004a8565b600581905550620002ac6777971b3845ba4cef60c01b620002d160201b60201c565b6000600660006101000a81548160ff02191690831515021790555050505050620004e3565b50565b600080fd5b6000819050919050565b620002ee81620002d9565b8114620002fa57600080fd5b50565b6000815190506200030e81620002e3565b92915050565b60008060006060848603121562000330576200032f620002d4565b5b60006200034086828701620002fd565b93505060206200035386828701620002fd565b92505060406200036686828701620002fd565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620003ac82620002d9565b9150620003b983620002d9565b9250828202620003c981620002d9565b91508282048414831517620003e357620003e262000370565b5b5092915050565b600082825260208201905092915050565b7f496e76616c69642061756374696f6e20706172616d65746572732e0000000000600082015250565b600062000433601b83620003ea565b91506200044082620003fb565b602082019050919050565b60006020820190508181036000830152620004668162000424565b9050919050565b60006200047a82620002d9565b91506200048783620002d9565b9250828203905081811115620004a257620004a162000370565b5b92915050565b6000620004b582620002d9565b9150620004c283620002d9565b9250828201905080821115620004dd57620004dc62000370565b5b92915050565b61177d80620004f36000396000f3fe6080604052600436106100c25760003560e01c8063590e1ae31161007f578063d3642a8811610059578063d3642a8814610201578063d57bde791461022c578063db2e1eed14610257578063fe67a54b14610282576100c2565b8063590e1ae31461019457806386433374146101ab57806391f90157146101d6576100c2565b806308551a53146100c7578063110f8874146100f25780631998aeef146101095780631d0806ae146101135780633103ea621461013e5780634b449cba14610169575b600080fd5b3480156100d357600080fd5b506100dc610299565b6040516100e9919061113f565b60405180910390f35b3480156100fe57600080fd5b506101076102bd565b005b61011161067b565b005b34801561011f57600080fd5b50610128610a98565b6040516101359190611173565b60405180910390f35b34801561014a57600080fd5b50610153610a9e565b6040516101609190611173565b60405180910390f35b34801561017557600080fd5b5061017e610aa4565b60405161018b9190611173565b60405180910390f35b3480156101a057600080fd5b506101a9610aaa565b005b3480156101b757600080fd5b506101c0610df9565b6040516101cd91906111a9565b60405180910390f35b3480156101e257600080fd5b506101eb610e0c565b6040516101f891906111e5565b60405180910390f35b34801561020d57600080fd5b50610216610e32565b6040516102239190611173565b60405180910390f35b34801561023857600080fd5b50610241610e38565b60405161024e9190611173565b60405180910390f35b34801561026357600080fd5b5061026c610e3e565b6040516102799190611173565b60405180910390f35b34801561028e57600080fd5b50610297610e44565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102d1670c16fa153bfad99860c01b6110fb565b6102e56726aa06e0d961f31360c01b6110fb565b6102f967c199ea4996abfbfa60c01b6110fb565b61030d676ec53ff6aa8a809360c01b6110fb565b600660009054906101000a900460ff1661035c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103539061125d565b60405180910390fd5b6103706734d0c440bb3741bf60c01b6110fb565b61038467d53c40b86eef699060c01b6110fb565b6103986736345e6a6e133a3d60c01b6110fb565b6103ac67c3cf51dc6efa3e1660c01b6110fb565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361043c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610433906112ef565b60405180910390fd5b6104506738cb24d58d81f55e60c01b6110fb565b610464670c87bbae07681a2960c01b6110fb565b6104786701f06c3ce33a3a1160c01b6110fb565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506104d06751621a7eb208693d60c01b6110fb565b6104e467fb257deda886fad160c01b6110fb565b6104f8670ee01d87eb3732b560c01b6110fb565b6000811161053b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105329061135b565b60405180910390fd5b61054f678c537e950c0c84d760c01b6110fb565b610563671228da6c62f0913960c01b6110fb565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105bc673db6390a4a7ab16760c01b6110fb565b6105d0674cb1165377356f4e60c01b6110fb565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610616573d6000803e3d6000fd5b5061062b67078e8f520d10846f60c01b6110fb565b61063f67dc6b2bd2865d3e7e60c01b6110fb565b7ff9922a0c01ab47885e389a38642ab35c02f97cc09d44c58de533ec24cd178a33338260405161067092919061137b565b60405180910390a150565b61068f675def54760f248fe660c01b6110fb565b6106a367d6cfabcd97e80f2860c01b6110fb565b6106b767dc00e38eda96db1660c01b6110fb565b6106cb67ff9b51ce9757dda760c01b6110fb565b600660009054906101000a900460ff161561071b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610712906113f0565b60405180910390fd5b61072f67bed03bf443e1ad5e60c01b6110fb565b610743672fbbfe1a4978386260c01b6110fb565b610757676ef925d1b440951260c01b6110fb565b61076b67665e1183d7aebadc60c01b6110fb565b60055442106107af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a69061145c565b60405180910390fd5b6107c367b7fcd03af6dd583e60c01b6110fb565b6107d767ed95e8b2e33a47b960c01b6110fb565b6107eb6724c8960a094cc20a60c01b6110fb565b6107ff6755d927cde92b225260c01b6110fb565b6007543411610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a906114c8565b60405180910390fd5b61085767d020318bd2ee984760c01b6110fb565b61086b67f91e558239e607a360c01b6110fb565b61087f678064a12329e3aa6060c01b6110fb565b610893675c045c8ec069dbeb60c01b6110fb565b6001543410156108d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cf9061155a565b60405180910390fd5b6108ec6717d23b48455d5fce60c01b6110fb565b61090067d74b327dbd8d15ec60c01b6110fb565b61091467d6bab06892cd1b8060c01b6110fb565b600073ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a115761097e676db098465b61c28360c01b6110fb565b6109926780c3ba7efad2170160c01b6110fb565b60075460086000600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a0591906115a9565b92505081905550610a26565b610a25676603413a4af694eb60c01b6110fb565b5b610a3a67c19b84ae2415d29960c01b6110fb565b33600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a8f678814e535ff54c53f60c01b6110fb565b34600781905550565b60045481565b60025481565b60055481565b610abe677c93843a4ce1b6aa60c01b6110fb565b610ad267737232b45a6d955b60c01b6110fb565b610ae6679a0e53c866b9013360c01b6110fb565b610afa67ec0f484cb0d3179c60c01b6110fb565b600660009054906101000a900460ff16610b49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b409061125d565b60405180910390fd5b610b5d67cb0c2beb9f246e9660c01b6110fb565b610b71679763ff2389bf3b2160c01b6110fb565b610b8567cb2d50a953d2b07260c01b6110fb565b610b99674de2b3c74cf9baaf60c01b6110fb565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610c29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c209061164f565b60405180910390fd5b610c3d672efaceabbeaf8def60c01b6110fb565b610c516794b12523a2d415c460c01b6110fb565b610c656765db9bbfc510d31a60c01b6110fb565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610cbd671738912fa656d32660c01b6110fb565b610cd167d2c32ca2d936882c60c01b6110fb565b610ce5673be2da664e7c9f4260c01b6110fb565b60008111610d28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1f906116bb565b60405180910390fd5b610d3c671d88b672455faee360c01b6110fb565b610d5067cc07d738bc3e0aa160c01b6110fb565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610da9674ef26732194553cf60c01b6110fb565b610dbd673e57f1cad84d6e5460c01b6110fb565b7fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d3382604051610dee92919061137b565b60405180910390a150565b600660009054906101000a900460ff1681565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60075481565b60015481565b610e5867f76c311c9fb289c660c01b6110fb565b610e6c6768e873b28341efa960c01b6110fb565b610e8067c3ab34cb333c9e5960c01b6110fb565b610e9467c184621e7f6e1a3e60c01b6110fb565b600660009054906101000a900460ff1615610ee4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edb906113f0565b60405180910390fd5b610ef86774c2ef76ad5b939360c01b6110fb565b610f0c672916c58dd5a8f42c60c01b6110fb565b610f20677d39b6d968394eee60c01b6110fb565b610f346789e52422a0d9d80e60c01b6110fb565b600554421015610f79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7090611727565b60405180910390fd5b610f8d67c366e2d7b54fa32d60c01b6110fb565b610fa1678f26aee3da0a266560c01b6110fb565b6001600660006101000a81548160ff021916908315150217905550610fd06770243de99cf0602660c01b6110fb565b610fe467a4e668938a61d26a60c01b6110fb565b600073ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146110e45761104e6793e696d9759aeb9460c01b6110fb565b61106267ce2d19ef4a39086a60c01b6110fb565b61107667cc30d3bdb6ab9bdd60c01b6110fb565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6007549081150290604051600060405180830381858888f193505050501580156110de573d6000803e3d6000fd5b506110f9565b6110f8672232fd059e60b34260c01b6110fb565b5b565b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611129826110fe565b9050919050565b6111398161111e565b82525050565b60006020820190506111546000830184611130565b92915050565b6000819050919050565b61116d8161115a565b82525050565b60006020820190506111886000830184611164565b92915050565b60008115159050919050565b6111a38161118e565b82525050565b60006020820190506111be600083018461119a565b92915050565b60006111cf826110fe565b9050919050565b6111df816111c4565b82525050565b60006020820190506111fa60008301846111d6565b92915050565b600082825260208201905092915050565b7f41756374696f6e20686173206e6f7420656e6465642e00000000000000000000600082015250565b6000611247601683611200565b915061125282611211565b602082019050919050565b600060208201905081810360008301526112768161123a565b9050919050565b7f57696e6e696e67206269646465722063616e6e6f74207769746864726177207260008201527f6566756e642e0000000000000000000000000000000000000000000000000000602082015250565b60006112d9602683611200565b91506112e48261127d565b604082019050919050565b60006020820190508181036000830152611308816112cc565b9050919050565b7f4e6f2066756e647320746f2077697468647261772e0000000000000000000000600082015250565b6000611345601583611200565b91506113508261130f565b602082019050919050565b6000602082019050818103600083015261137481611338565b9050919050565b600060408201905061139060008301856111d6565b61139d6020830184611164565b9392505050565b7f41756374696f6e2068617320616c726561647920656e6465642e000000000000600082015250565b60006113da601a83611200565b91506113e5826113a4565b602082019050919050565b60006020820190508181036000830152611409816113cd565b9050919050565b7f41756374696f6e206973206e6f206c6f6e676572206f70656e2e000000000000600082015250565b6000611446601a83611200565b915061145182611410565b602082019050919050565b6000602082019050818103600083015261147581611439565b9050919050565b7f546865726520697320616c7265616479206120686967686572206269642e0000600082015250565b60006114b2601e83611200565b91506114bd8261147c565b602082019050919050565b600060208201905081810360008301526114e1816114a5565b9050919050565b7f42696420616d6f756e742069732062656c6f772074686520726573657276652060008201527f70726963652e0000000000000000000000000000000000000000000000000000602082015250565b6000611544602683611200565b915061154f826114e8565b604082019050919050565b6000602082019050818103600083015261157381611537565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115b48261115a565b91506115bf8361115a565b92508282019050808211156115d7576115d661157a565b5b92915050565b7f596f752063616e6e6f7420726566756e64206173207468652077696e6e696e6760008201527f206269646465722e000000000000000000000000000000000000000000000000602082015250565b6000611639602883611200565b9150611644826115dd565b604082019050919050565b600060208201905081810360008301526116688161162c565b9050919050565b7f4e6f2066756e647320746f20726566756e642e00000000000000000000000000600082015250565b60006116a5601383611200565b91506116b08261166f565b602082019050919050565b600060208201905081810360008301526116d481611698565b9050919050565b7f41756374696f6e206973207374696c6c206f70656e2e00000000000000000000600082015250565b6000611711601683611200565b915061171c826116db565b602082019050919050565b6000602082019050818103600083015261174081611704565b905091905056fea26469706673582212201b396aa0b6130b71239682b3a98022729945573447d67a0d023c2f9e8e95f1b964736f6c63430008120033";

type BasicDutchAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicDutchAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicDutchAuction__factory extends ContractFactory {
  constructor(...args: BasicDutchAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BasicDutchAuction> {
    return super.deploy(
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<BasicDutchAuction>;
  }
  override getDeployTransaction(
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): BasicDutchAuction {
    return super.attach(address) as BasicDutchAuction;
  }
  override connect(signer: Signer): BasicDutchAuction__factory {
    return super.connect(signer) as BasicDutchAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicDutchAuctionInterface {
    return new utils.Interface(_abi) as BasicDutchAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicDutchAuction {
    return new Contract(address, _abi, signerOrProvider) as BasicDutchAuction;
  }
}
