/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NFTDutchAuction,
  NFTDutchAuctionInterface,
} from "../../../contracts/NFTDutchAuction.sol/NFTDutchAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "auctionStatusOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockDifference",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isAuctionOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftAddress",
    outputs: [
      {
        internalType: "contract IMyNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numBlocksAuctionOpen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offerPriceDecrement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "placeBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "reservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b6b38038062001b6b8339818101604052810190620000379190620004cc565b6200005367178ba1866f4fa8d460c01b6200042460201b60201c565b6200006f672eed34f01aec9f0f60c01b6200042460201b60201c565b33600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000cc6740b4ffba715d802560c01b6200042460201b60201c565b43600781905550620000ef67ebdb8ee908ec57bf60c01b6200042460201b60201c565b6001600960006101000a81548160ff0219169083151502179055506200012667b53a068e877f3f6c60c01b6200042460201b60201c565b8360008190555062000149674fd4420527ae439660c01b6200042460201b60201c565b84600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001a66725ebdbe3f6e49b5560c01b6200042460201b60201c565b620001c2671989f91b426af39c60c01b6200042460201b60201c565b620001de67f7b2bacbbe8afa0f60c01b6200042460201b60201c565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e6000546040518263ffffffff1660e01b815260040162000276919062000565565b602060405180830381865afa15801562000294573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ba919062000582565b73ffffffffffffffffffffffffffffffffffffffff161462000313576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200030a9062000615565b60405180910390fd5b6200032f67a6b36ab55a4a882760c01b6200042460201b60201c565b6200034b676e0f7999b60fbf8560c01b6200042460201b60201c565b826002819055506200036e6726ffa8b8edc4c5da60c01b6200042460201b60201c565b816003819055506200039167747d11e8ac067b1160c01b6200042460201b60201c565b80600481905550620003b4672c59b9bcc523850e60c01b6200042460201b60201c565b620003d067d74ef3993324d92a60c01b6200042460201b60201c565b6000600454600354620003e4919062000666565b90506200040267679ab0bafdea184e60c01b6200042460201b60201c565b60025481620004129190620006b1565b600881905550505050505050620006ec565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000459826200042c565b9050919050565b6200046b816200044c565b81146200047757600080fd5b50565b6000815190506200048b8162000460565b92915050565b6000819050919050565b620004a68162000491565b8114620004b257600080fd5b50565b600081519050620004c6816200049b565b92915050565b600080600080600060a08688031215620004eb57620004ea62000427565b5b6000620004fb888289016200047a565b95505060206200050e88828901620004b5565b94505060406200052188828901620004b5565b93505060606200053488828901620004b5565b92505060806200054788828901620004b5565b9150509295509295909350565b6200055f8162000491565b82525050565b60006020820190506200057c600083018462000554565b92915050565b6000602082840312156200059b576200059a62000427565b5b6000620005ab848285016200047a565b91505092915050565b600082825260208201905092915050565b7f596f7520646f6e2774206f776e2074686973204e465420746f2073656c6c0000600082015250565b6000620005fd601e83620005b4565b91506200060a82620005c5565b602082019050919050565b600060208201905081810360008301526200063081620005ee565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620006738262000491565b9150620006808362000491565b9250828202620006908162000491565b91508282048414831517620006aa57620006a962000637565b5b5092915050565b6000620006be8262000491565b9150620006cb8362000491565b9250828201905080821115620006e657620006e562000637565b5b92915050565b61146f80620006fc6000396000f3fe6080604052600436106100e85760003560e01c8063672d5d3b1161008a578063d3642a8811610059578063d3642a88146102c6578063db2e1eed146102f1578063eb91d37e1461031c578063ecfc7ecc14610347576100e8565b8063672d5d3b1461021a5780637150d8ae14610245578063c6bc518214610270578063cca414271461029b576100e8565b80633103ea62116100c65780633103ea621461016e57806342c71d2b146101995780635bf8633a146101c45780635d05125b146101ef576100e8565b806308551a53146100ed5780630b48ab8f146101185780631d0806ae14610143575b600080fd5b3480156100f957600080fd5b50610102610351565b60405161010f9190610f21565b60405180910390f35b34801561012457600080fd5b5061012d610377565b60405161013a9190610f57565b60405180910390f35b34801561014f57600080fd5b5061015861038a565b6040516101659190610f8b565b60405180910390f35b34801561017a57600080fd5b50610183610390565b6040516101909190610f8b565b60405180910390f35b3480156101a557600080fd5b506101ae610396565b6040516101bb9190610f8b565b60405180910390f35b3480156101d057600080fd5b506101d96103ee565b6040516101e69190611005565b60405180910390f35b3480156101fb57600080fd5b50610204610414565b6040516102119190610f8b565b60405180910390f35b34801561022657600080fd5b5061022f61041a565b60405161023c9190610f8b565b60405180910390f35b34801561025157600080fd5b5061025a61045e565b6040516102679190610f21565b60405180910390f35b34801561027c57600080fd5b50610285610484565b6040516102929190610f8b565b60405180910390f35b3480156102a757600080fd5b506102b061048a565b6040516102bd9190610f57565b60405180910390f35b3480156102d257600080fd5b506102db6104da565b6040516102e89190610f8b565b60405180910390f35b3480156102fd57600080fd5b506103066104e0565b6040516103139190610f8b565b60405180910390f35b34801561032857600080fd5b506103316104e6565b60405161033e9190610f8b565b60405180910390f35b61034f610606565b005b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900460ff1681565b60085481565b60035481565b60006103ac6783a0fa238fe5507e60c01b610c43565b6103c067ec5e4d17337359fe60c01b610c43565b6103d46789dd0ab97d4a9ad460c01b610c43565b6007546103df61041a565b6103e9919061104f565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60006104306774de773792d477bc60c01b610c43565b61044467489ff98932972b0260c01b610c43565b610458676b2d1386a9e1784960c01b610c43565b43905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60006104a067a4c1aaba673fa72360c01b610c43565b6104b4673dc9c49cffda509560c01b610c43565b6104c867e72518b674d3759560c01b610c43565b6003546104d3610396565b1115905090565b60045481565b60025481565b60006104fc67e8f4b8f2a5816d8860c01b610c43565b61051067fca88963f97e5ed060c01b610c43565b61052467531628a5b2d9e7d560c01b610c43565b600061052e610396565b9050610544679044c24c0f1a3c4b60c01b610c43565b610558672383c4abc7f39c0a60c01b610c43565b60035481106105a857610575672d1a4c6646820e5e60c01b610c43565b6105896749c5af0599c60f8760c01b610c43565b61059d673c1761ce3f87340a60c01b610c43565b600254915050610603565b6105bc672de3201f2035800860c01b610c43565b6105d067f6cdcd252bfb7cc860c01b610c43565b6105e4670d7f8a26cbf95f0160c01b610c43565b600454816105f29190611083565b6008546105ff919061104f565b9150505b90565b61061a6724b5cb9a691f844560c01b610c43565b61062e6745cb79a56a2b631b60c01b610c43565b61064267b26c470baad13c8e60c01b610c43565b6106566740d831310979674560c01b610c43565b61065e61048a565b61069d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069490611122565b60405180910390fd5b6106b16745ca6277e9d2908960c01b610c43565b6106c567cd2a838648dcdf0160c01b610c43565b6106d9679afdc418ee4c69e160c01b610c43565b6106ed67a1a0902d2410543260c01b610c43565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361077d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107749061118e565b60405180910390fd5b61079167d5c699647af115c560c01b610c43565b6107a5673ed20a6e8f4ec65060c01b610c43565b6107b96771659a7a5445159f60c01b610c43565b6107cd677cd051ba68ea722b60c01b610c43565b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461085e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610855906111fa565b60405180910390fd5b61087267ff05876e4552704460c01b610c43565b610886670d6051a504dee1e760c01b610c43565b61089a678acdd0eb2e2db23b60c01b610c43565b6108ae6773e61756e1573ebf60c01b610c43565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093590611266565b60405180910390fd5b610952670e88214c57e3ddf460c01b610c43565b61096667fecb1a17d2ede24960c01b610c43565b61097a6773b197044d02dcb360c01b610c43565b61098e6727795f7974a1b2c360c01b610c43565b6109966104e6565b3410156109d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cf906112d2565b60405180910390fd5b6109ec678f4b71256890816f60c01b610c43565b610a00677421cf00f7ee39ac60c01b610c43565b610a1467c4c8ad51696be90460c01b610c43565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a576104e6565b604051610a6390611323565b60006040518083038185875af1925050503d8060008114610aa0576040519150601f19603f3d011682016040523d82523d6000602084013e610aa5565b606091505b50509050610abd674f79a1617318bc6b60c01b610c43565b610ad1674aad7470d13846c160c01b610c43565b610ae5678ce52ed69693f67660c01b610c43565b6001151581151514610b2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2390611384565b60405180910390fd5b610b406706abde97fbe1123c60c01b610c43565b610b546737cdf5c8f92341d960c01b610c43565b610b68677c95a6d1350a174860c01b610c43565b6000610b726104e6565b34610b7d919061104f565b9050610b9367491338420513a13460c01b610c43565b610ba767c9f4ec8d963220a760c01b610c43565b6000811115610bfa57610bc467464787cac3a034bb60c01b610c43565b610bd867233892d0b73dd9aa60c01b610c43565b610bec67c9a9b80a81d904c160c01b610c43565b610bf581610c46565b610c0f565b610c0e679d479d21f48cec1e60c01b610c43565b5b610c2367a24d70489a230d4160c01b610c43565b610c37679295beb6e894056060c01b610c43565b610c3f610ccc565b5050565b50565b610c5a67121be5b142f8f88d60c01b610c43565b610c6e67d20e01b631e8433e60c01b610c43565b610c82679cc914dcefdfc3a360c01b610c43565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610cc8573d6000803e3d6000fd5b5050565b610ce067536f4f11dac17a9060c01b610c43565b610cf467faf300df835874e360c01b610c43565b610d0867fc225ffce895d24960c01b610c43565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336000546040518463ffffffff1660e01b8152600401610d8b939291906113a4565b600060405180830381600087803b158015610da557600080fd5b505af1158015610db9573d6000803e3d6000fd5b50505050610dd167ba5d4a4572e1300e60c01b610c43565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e6000546040518263ffffffff1660e01b8152600401610e2e9190610f8b565b602060405180830381865afa158015610e4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6f919061140c565b600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ec36793d63782b014e6a860c01b610c43565b6000600960006101000a81548160ff021916908315150217905550565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f0b82610ee0565b9050919050565b610f1b81610f00565b82525050565b6000602082019050610f366000830184610f12565b92915050565b60008115159050919050565b610f5181610f3c565b82525050565b6000602082019050610f6c6000830184610f48565b92915050565b6000819050919050565b610f8581610f72565b82525050565b6000602082019050610fa06000830184610f7c565b92915050565b6000819050919050565b6000610fcb610fc6610fc184610ee0565b610fa6565b610ee0565b9050919050565b6000610fdd82610fb0565b9050919050565b6000610fef82610fd2565b9050919050565b610fff81610fe4565b82525050565b600060208201905061101a6000830184610ff6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061105a82610f72565b915061106583610f72565b925082820390508181111561107d5761107c611020565b5b92915050565b600061108e82610f72565b915061109983610f72565b92508282026110a781610f72565b915082820484148315176110be576110bd611020565b5b5092915050565b600082825260208201905092915050565b7f41756374696f6e20697320636c6f736564000000000000000000000000000000600082015250565b600061110c6011836110c5565b9150611117826110d6565b602082019050919050565b6000602082019050818103600083015261113b816110ff565b9050919050565b7f596f7520616c726561647920626f7567687420746869732070726f6475637400600082015250565b6000611178601f836110c5565b915061118382611142565b602082019050919050565b600060208201905081810360008301526111a78161116b565b9050919050565b7f50726f6475637420616c726561647920736f6c64000000000000000000000000600082015250565b60006111e46014836110c5565b91506111ef826111ae565b602082019050919050565b60006020820190508181036000830152611213816111d7565b9050919050565b7f4f776e65722063616e2774206269640000000000000000000000000000000000600082015250565b6000611250600f836110c5565b915061125b8261121a565b602082019050919050565b6000602082019050818103600083015261127f81611243565b9050919050565b7f57454920697320696e73756666696369656e7400000000000000000000000000600082015250565b60006112bc6013836110c5565b91506112c782611286565b602082019050919050565b600060208201905081810360008301526112eb816112af565b9050919050565b600081905092915050565b50565b600061130d6000836112f2565b9150611318826112fd565b600082019050919050565b600061132e82611300565b9150819050919050565b7f4661696c656420746f2073656e64000000000000000000000000000000000000600082015250565b600061136e600e836110c5565b915061137982611338565b602082019050919050565b6000602082019050818103600083015261139d81611361565b9050919050565b60006060820190506113b96000830186610f12565b6113c66020830185610f12565b6113d36040830184610f7c565b949350505050565b600080fd5b6113e981610f00565b81146113f457600080fd5b50565b600081519050611406816113e0565b92915050565b600060208284031215611422576114216113db565b5b6000611430848285016113f7565b9150509291505056fea2646970667358221220542fae39f74113d2bbeee7fb2d635b70b1864c975b3d432f614470da5249fad064736f6c63430008110033";

type NFTDutchAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTDutchAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTDutchAuction__factory extends ContractFactory {
  constructor(...args: NFTDutchAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _nftAddress: PromiseOrValue<string>,
    _nftId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTDutchAuction> {
    return super.deploy(
      _nftAddress,
      _nftId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<NFTDutchAuction>;
  }
  override getDeployTransaction(
    _nftAddress: PromiseOrValue<string>,
    _nftId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nftAddress,
      _nftId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): NFTDutchAuction {
    return super.attach(address) as NFTDutchAuction;
  }
  override connect(signer: Signer): NFTDutchAuction__factory {
    return super.connect(signer) as NFTDutchAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTDutchAuctionInterface {
    return new utils.Interface(_abi) as NFTDutchAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTDutchAuction {
    return new Contract(address, _abi, signerOrProvider) as NFTDutchAuction;
  }
}
